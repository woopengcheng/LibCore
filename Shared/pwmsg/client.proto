import "options.proto";
package pwngs.protocol.clientmsg;

message CSLogin {
	option (msgid) = 11;
	required string name = 1;
	required string pswd = 2;
}

message SCLoginResult {
	option (msgid) = 12;
	required int32 result = 1;
	optional string error = 2;
}

// -------------------------------------------------------
// auto generate by ProbufAssembly
// ./proto\00000_00000_def.proto
// -------------------------------------------------------
message SVector3
{
	required float x = 1;
	required float y = 2;
	required float z = 3;
}

message SStageInfo
{
	required int64 id = 1;
	required bytes scene = 2;
	required bytes scene_navmesh = 3;
	required bytes scene_info = 4;
}

message SAura
{
	required int64 id = 1;
	required int64 caster = 2;
	required int64 owner = 3;
	required int32 type = 5;
	required int32 overlap_num = 6;
	required int64 duration = 7; // ms || count	
}

message SItemModAttr
{
	required int32 mod = 1;					// 修改属性
	required int32 type = 2;				// 修改方式
	required float value = 3;				// 修改数值
}

// 物品结构
message SItemEquip
{
	required int32 enchant_lvl = 1;			// 强化等级
	repeated int32 gem_ids = 2;				// 镶嵌宝石
	required int32 runeTID = 3;				// 符文TID
	required int32 runeExp = 4;				// 符文经验
	required int32 refine_lvl = 5;			// 精炼等级
}

message SItemRune
{
	required int32 exp = 1;					// 符文经验
}

message SItemBless
{
	repeated SItemModAttr mod_attrs = 1;	// 祝福属性
}

message SItemEgg
{
	required float strength = 1;		// 力量
	required float intellect = 2;		// 精神
	required float vitality = 3;		// 体质
	required float str_growth = 4;		// 力量成长值
	required float int_growth = 5;		// 精神成长值
	required float vit_growth = 6;		// 体质成长值
}

message SItem
{
	required int64 item_id = 1;				// 唯一ID
	required int32 item_type = 2;			// 配置ID
	required int32 item_count = 3;			// 物品数量
	required int32 item_bag = 4;			// 背包类型
	required int32 item_position = 5;		// 背包格子
	required int64 item_flags = 6;			// 标志位
	required int64 open_date = 7;			// 启用日期
	optional SItemEquip equip_attrs = 8;	// 装备属性
	optional SItemBless bless_attrs = 9;	// 祝福属性
	optional SItemRune rune_attrs = 10;		// 符文属性
	optional SItemEgg egg_attrs = 11;		// 龙蛋属性
}

// 邮件结构
message SMailBody
{
	required bytes subject = 1;				// 邮件主题
	required bytes content = 2;				// 邮件内容
}

message SMailAtts
{
	required int64 gold = 1;				// 金币
	required int64 gold_gifts = 2;				// 赠币
	required int64 silver = 3;				// 银币
	required int64 exp = 4;					// 经验
	required int64 reputation = 5;				// 声望
}

message SMail
{
	required int32 mode = 1;				// 类型
	required int64 mail_id = 2;				// 唯一ID
	required bytes from_name = 3;				// 发信人
	required bytes from_date = 4;				// 发信日期
	optional SMailBody body = 5;				// 正文
	optional SMailAtts atts = 6;				// 附件
}

// 关系成员
message SRelationMember
{
	required int64 rid = 1;
	required bytes name = 2;
	required int32 sex = 3;
	required bool isOnline = 4;
}

message SRelationMemberStatus
{
	required int64 rid = 1;
	required bool isOnline = 2;
}

message SNpcQuestState
{
	required int64 npc_guid	= 1;
	required int32 state = 2;// 0:不显示 3：可完成 1：可接任务 2：已接任务
}

// 商店物品记录
message SShopItem
{
	required int32 item_type = 1;			// 物品ID
	required int32 item_count = 2;			// 剩余数量
}

// 聊天相关
message SChatContact
{
	required int64 id = 1;
	required bytes name = 2;
	required int32 sex = 3;
	optional bool isOnline = 4;
}

message SChatContactStatus
{
	required int64 id = 1;
	required bool isOnline = 2;
}

message SChatMsg
{
	required SChatContact contact = 1;		// 发送者
	required int64 timestamp = 2;			// 发送日期
	required bytes content = 3;			// 发送内容
}

// 龙属性
message SDragonStatistic
{
	required float strength = 1;		// 力量
	required float intellect = 2;		// 精神
	required float vitality = 3;		// 体质
	required float str_growth = 4;		// 力量成长值
	required float int_growth = 5;		// 精神成长值
	required float vit_growth = 6;		// 体质成长值
}
// 龙结构
message SDragon
{
	required int64 id = 1;
	required int32 tid = 2;
	required int32 bag = 3;
	required int32 position = 4;
	required bytes name = 5;
	required int32 level = 6;
	required int64 exp = 7;
	required SDragonStatistic statistic = 8;
	repeated SMagicType magics = 9;	// 技能信息
	optional int64 cooldown_ms = 10;
}
// -------------------------------------------------------
// auto generate by ProbufAssembly
// ./proto\01000_01009_login.proto
// -------------------------------------------------------
// -----------------------------------------

message SCharacter{
	required int64	id = 1;
	required bytes name = 2;
	required int32 	profession = 3;
	required int32 	level = 4;
	required int32 sex = 5;
}

message CSLoginGate
{
	option (msgid) = 1001;
}

message SCLoginGate
{
	option (msgid) = 1002;
	required int32 result = 1;
}

message CSQueryCharacters {
	option (msgid) = 1003;
}

message SCQueryCharacters {
	option (msgid) = 1004;
	repeated SCharacter characters = 1;
}

message CSCharacterCreate{
	option (msgid) = 1005;
	required bytes name = 1;
	required int32 profession = 2;
	required int32 sex = 3;
}

message SCCharacterCreate{
	option (msgid) = 1006;
	required int32 result = 1;
	optional SCharacter character = 2;
}

message CSCharacterDelete{
	option (msgid) = 1007;
	required int64 id = 1;
}

message SCCharacterDelete{
	option (msgid) = 1008;
	required int32 result = 1;
	optional int64 id= 2;
}

message CSCharacterLogin{
	option (msgid) = 1009;
	required int64 cid = 1;
}

message SCCharacterLogin{
	option (msgid) = 1010;
	required int32 result = 1;
	optional bytes error = 2;
	optional SVector3 orientation = 3;
	optional SVector3 position = 4;
	optional SStageInfo scene_info = 5;
	optional SCharacter character = 6;
	optional int32 bigWorldAreaID = 7;
}

message CSCharacterEnterWorld
{
	option (msgid) = 1011;
	required int64 id = 1;
}
// -------------------------------------------------------
// auto generate by ProbufAssembly
// ./proto\01200_01299_motion.proto
// -------------------------------------------------------
// -----------------------------------------
// 移动信息

message SMotion
{
	required int32 motion_type = 1;
	optional int64 motion_target = 2;
	optional int32 motion_mode = 3;
	optional SVector3 motion_orientation = 4;
	optional SVector3 motion_position = 5;
	repeated SVector3 motion_path = 6;
	optional float param = 7; // 自定参数 (追击中,为接近距离)
	optional SVector3 motion_faceorientation = 8; 
}
// -----------------------------------------

message CSStartForward
{
	option (msgid) = 1201;
	required SVector3 orientation = 1;
	required SVector3 position = 2;
	required SMotion motion = 3;
	optional int64 caster = 4;
}

message SCStartForward
{
	option (msgid) = 1202;
	required int64 id = 1;
	required SVector3 position = 2;
	required SMotion motion = 3;
}

message CSCleanForward
{
	option (msgid) = 1203;
	required SVector3 orientation = 1;
	required SVector3 position = 2;
	optional int32 bigWorldAreaID = 3;
	optional int64 caster = 4;
}

message SCCleanForward
{
	option (msgid) = 1204;
	required int64 id = 1;
	required SVector3 orientation = 2;
	required SVector3 position = 3;
}

message CSUpdateMoving
{
	option (msgid) = 1205;
	required SVector3 position = 1;
}

message CSChangeOrientation
{
	option (msgid) = 1206;
	required SVector3 position = 1;
	required SVector3 orientation = 2;
	optional SMotion motion = 3;
	optional int64 caster = 4;
}

message SCChangeOrientation
{
	option (msgid) = 1207;
	required int64 id = 1;
	required SVector3 position = 2;
	required SVector3 orientation = 3;
	optional SMotion motion = 4;
}

message SCTeleport 
{
	option (msgid) = 1208;
	required int64 id = 1;
	required SVector3 position = 2;
	optional SVector3 orientation = 3;
}

message CSSyncOrientation
{
	option (msgid) = 1209;
	required int64 id = 1;
	required SVector3 orientation = 2;
}

message SCSyncOrientation
{
	option (msgid) = 1210;
	required int64 id = 1;
	required SVector3 orientation = 2;
}
// -------------------------------------------------------
// auto generate by ProbufAssembly
// ./proto\01300_01301_aoi.proto
// -------------------------------------------------------

// -----------------------------------------

message SInterpolationObject
{
    required int32 type = 1;
    required float elapsed_second = 2;
    repeated SVector3 bezier_points = 3;
}

// -----------------------------------------

message SCollisionObject
{
	required int32 collision_id = 1;
	required int64 owner = 2;
	required float radius = 3;
	required SVector3 position = 4;
	required SVector3 orientation = 5;
    required SInterpolationObject interpolation = 6;
    required float survive_second = 7;
    optional int32 client_id = 8;

}

// -----------------------------------------

message SActionObject
{
	required int32 actionNameId = 1;
	required float curActionTime = 2;
}

message SEquipObject
{
	required int32 tid = 1;
}
message SHumanObject
{
	required int32 pro = 1;
	required int32 sex = 2;
	repeated SEquipObject equipObject = 3;
	optional int32 temp_weapon_id = 4;
}

message SCharmObject
{
	required int64 owner = 1;
	required int32 magic_type = 2;
}	

message SBreakableObject
{
	required int32 type = 1;
}

message SStaticObject
{
	required float min_trigger_dist = 1;
}

message SDragonObject
{
	required int64 ownerID = 1;
	required bytes name = 2;
}

message SBannerObject
{
	required int64 basemapid = 1;
	required int64 gamemapid = 2;
}

message SUnitObject
{
	required int32 type = 1;
	required float life = 2;
	required float mana = 3;
	required float max_life = 4;
	required float speed = 5;
	required int32 level = 6;
	repeated SAura auras = 7;
	optional int32 ctrl_type = 8;
	optional int64 ctrl_id = 9;
	optional int64 ctrl_owner_id = 10;
	optional SActionObject actionObject = 11;
	optional SHumanObject humanObject = 12;
	optional SBreakableObject breakableObject = 13;
	optional SCharmObject charmObject = 14;
	optional SStaticObject staticObject = 15;
	optional SDragonObject dragonObject = 16;
	optional SBannerObject bannerObject = 17;
	optional int32 camp = 18;
}

// ----------------------------------------

message SItemObject
{
	required int32 type = 1;
	required int32 count = 2;
	required int64 dropper_id = 3;
	required bool dropping = 4;
	required int64 owner = 5;
}

// -----------------------------------------


// -----------------------------------------

message SGameEntity
{
	required int64 id = 1;
	required int32 type = 2;
	required bytes name = 3;
	optional SUnitObject unit = 4;
	optional SCollisionObject collision = 5;
	optional SItemObject sitem = 6;
};

// -----------------------------------------

message SCGameObjectEnter
{
	option (msgid) = 1300;
	required SGameEntity obj = 1;
	required SVector3 position = 2;
	required SVector3 orientation = 3;
	optional SMotion motion = 4;
}

message SCGameObjectLeave
{
	option (msgid) = 1301;
	required int64 id = 1;
}
// -------------------------------------------------------
// auto generate by ProbufAssembly
// ./proto\01500_02499_init_attr.proto
// -------------------------------------------------------
message SUnitAttrValue
{
	required int32 attr = 1;
	required int64 value = 2;
}

message CSUnitAttrQuery
{
	option (msgid) = 1500;
	required int64 id = 1;
	required int64 context = 2;
	repeated int32 attrs = 3;
}

message SCUnitAttrQuery
{
	option (msgid) = 1501;
	required int64 id = 1;
	required int64 context = 2;
	repeated SUnitAttrValue attrs = 3;
}

message SCUnitAttrUpdate
{
	option (msgid) = 1503;
	required int64 id = 1;
	repeated SUnitAttrValue attrs = 2;
}


// --------------------------------------------------------------------------

message SCMotionFlags
{
    option (msgid) = 1510;
    required int64 id = 1;
    required int32 motion_flags = 2;
}
// --------------------------------------------------------------------------


// 技能强化信息
message SMagicIntensify
{
    required int32 LevelPencent = 1; // 百分比提升等级
    required int32 LevelValue = 2;  // 固定伤害提升等级
    required int32 LevelAddition = 3; // 附加属性伤害提升等级
}

message SMagicType
{
    required int32 id = 1;
	required int32 loc = 2;
    required SMagicIntensify intensify = 3;
};

enum EMagicTypeOper
{
    MAGIC_TYPE_OPER_QUERY = 0;
    MAGIC_TYPE_OPER_NEW  = 1;
    MAGIC_TYPE_OPER_DEL = 2;
};

message CSMagicTypeOper
{
	option (msgid) = 1550;
	required EMagicTypeOper oper = 1;
	optional int32 data = 2;
};

message SCMagicTypeOper
{
	option (msgid) = 1551;
	required int64 id = 1;
	required EMagicTypeOper oper = 2;
	repeated SMagicType magics = 3;
	optional int32 data = 4;
}

// -----------------------------------------

message SStatisticObject
{
	required int32 id = 1;
	required float value = 2;
}

message CSAskHumanStatistic
{
	option (msgid) = 1601;
}

message SCRefreshStatistic
{
	option (msgid) 	= 1602;
	required int64 id = 1;
	required float HP = 2;
	required float MP = 3;
	repeated SStatisticObject obj = 4;
}

message SCUpdateStatistic
{
	option (msgid) = 1603;
	required int64 id = 1;
	required float HP = 2;
	required float MP = 3;
	repeated SStatisticObject obj = 4;
}

message SCUpdateMP
{
	option (msgid) = 1604;
	required int64 id = 1;
	required int32 type = 2;
	required int32 flag = 3; //0表示加  1表示减
	required float value = 4;
}

message SCUpdateHP
{
	option (msgid) = 1605;
	required int64 id = 1;
	required int32 type = 2;
	required int32 flag = 3; //0表示加  1表示减
	required float value = 4;
	
}

message SCUpdateDurability
{
	option (msgid) = 1606;
	required int64 id = 1;
	required int32 value = 2;
}

// 下发给客户端的更新bitsetEx数据的消息
message SCBitsetEx
{
	option (msgid) = 1700;
	required int64 target = 1;
	repeated int32 set_bits = 2;
	repeated int32 rst_bits = 3; 
	repeated int32 set_bitexs = 4;
	repeated int32 rst_bitexs = 5;
}

// 战斗状态
message SCCombatStatus
{
	option (msgid) = 1705;
	required int64 owner = 1;
	required bool incombat = 2;
}
// -------------------------------------------------------
// auto generate by ProbufAssembly
// ./proto\02500_02999_team_guild_relation.proto
// -------------------------------------------------------
// -----------------------------------------

message STeamMember
{
	required int64 uid = 1;
	required bytes uname = 2;
}

message CSCreateTeam
{
	option (msgid) = 2500;
	required bytes tname = 1;
}

message SCCreateTeam
{
	option (msgid) = 2501;
	required int64 result = 1;
}

message CSDeleteTeam
{
	option (msgid) = 2502;
}

message SCDeleteTeam
{
	option (msgid) = 2503;
	required int64 result = 1;
}

message CSInviteTeam
{
	option (msgid) = 2504;
	required int64 uid = 1;
}

message SCInviteTeam
{
	option (msgid) = 2505;
	required int64 result = 1;
	required int64 uid = 2;
	required bytes uname = 3;
}

message CSApplyTeam
{
	option (msgid) = 2506;
	required int64 tid = 1;
}

message SCApplyTeam
{
	option (msgid) = 2507;
	required int64 result = 1;
	required int64 uid = 2;
	required bytes uname = 3;
}

message CSEnterTeam
{
	option (msgid) = 2508;
	required int64 tid = 1;
	required int64 uid = 2;
	required bytes uname = 3;
}

message SCEnterTeam
{
	option (msgid) = 2509;
	required int64 result = 1;
	required STeamMember member = 2;
}

message CSLeaveTeam
{
	option (msgid) = 2510;
	required int64 uid = 1;
}

message SCLeaveTeam
{
	option (msgid) = 2511;
	required int64 result = 1;
	required int64 uid = 2;
}

message SCDiscoTeam
{
	option (msgid) = 2512;
	required int64 uid = 1;
}

message SCReconTeam
{
	option (msgid) = 2513;
	required int64 uid = 1;
}

message CSTeamInfo
{
	option (msgid) = 2514;
}

message SCTeamInfo
{
	option (msgid) = 2515;
	required int64 result = 1;
	repeated STeamMember member = 2;
}

// -----------------------------------------



// -----------------------------------------

message SGuildMember
{
	required int64 uid = 1;
	required bytes uname = 2;
}

message CSCreateGuild
{
	option (msgid) = 2700;
	required bytes gname = 1;
}

message SCCreateGuild
{
	option (msgid) = 2701;
	required int64 result = 1;
}

message CSDeleteGuild
{
	option (msgid) = 2702;
}

message SCDeleteGuild
{
	option (msgid) = 2703;
	required int64 result = 1;
}

message CSApplyGuild
{
	option (msgid) = 2704;
	required int64 gid = 1;
}

message SCApplyGuild
{
	option (msgid) = 2705;
	required int64 result = 1;
	required int64 uid = 2;
	required bytes uname = 3;
}

message CSEnterGuild
{
	option (msgid) = 2706;
	required int64 gid = 1;
	required int64 uid = 2;
	required bytes uname = 3;
}

message SCEnterGuild
{
	option (msgid) = 2707;
	required int64 result = 1;
	required SGuildMember member = 2;
}

message CSLeaveGuild
{
	option (msgid) = 2708;
	required int64 uid = 1;
}

message SCLeaveGuild
{
	option (msgid) = 2709;
	required int64 result = 1;
	required int64 uid = 2;
}

message CSGuildInfo
{
	option (msgid) = 2710;
}

message SCGuildInfo
{
	option (msgid) = 2711;
	required int64 result = 1;
	repeated SGuildMember member = 2;
}



// -----------------------------------------

// 客户端请求: 增加关系成员
message CSAddRelationMember
{
	option (msgid) = 2800;
	required int64 rid = 1;
	required bytes name = 2;
	required int32 type = 3;
}

// 服务端通知: 增加成员反馈
message SCAddRelationMemberResult
{
	option (msgid) = 2801;
	required int32 type = 1;
	required int32 result = 2;
	optional SRelationMember member = 3;
}

// 客户端请求: 删除关系成员
message CSDelRelationMember
{
	option (msgid) = 2802;
	required int64 rid = 1;
	required int32 type = 2;
}

// 服务端通知: 删除成员反馈
message SCDelRelationMemberResult
{
	option (msgid) = 2803;
	required int32 type = 1;
	required int64 rid = 2;
	required int32 result = 3;
}

// 客户端请求: 获取关系列表
message CSQueryRelation
{
	option (msgid) = 2804;
	required int32 type = 1;
}

// 服务端通知: 下发关系列表
message SCQueryRelationResult
{
	option (msgid) = 2805;
	required int32 type = 1;
	repeated SRelationMember members = 2;
}

// 服务端通知: 更新单一关系成员状态
message SCUpdateRelationMember
{
	option (msgid) = 2808;
	required int32 type = 1;
	required SRelationMemberStatus status = 2;
}
// -------------------------------------------------------
// auto generate by ProbufAssembly
// ./proto\03000_03999_magic.proto
// -------------------------------------------------------

message SCastTarget
{
	required int32 target_type = 1;
	optional int64 target_id = 2;
	optional SVector3 target_position = 3;
	optional int64 target_item = 4;
}

// 开始施法 c=>s
message CSCastMagic
{
	option (msgid) = 3000;
	required int32 magic_type = 1;
	required SCastTarget cast_target = 2;
	optional float param1 = 3;
	optional float param2 = 4;
	optional int64 caster = 5;
	optional float param3 = 6;
	optional int32 param4 = 7;
}

// 施法开始通知 s=>c
message SCCastBegan
{
	option (msgid) = 3001;
	required int64 caster = 1;
	required SVector3 caster_position = 2;
	required int32 magic_type = 3;
	required int32 magic_type_root = 4;
	required SCastTarget cast_target = 5;
	required int32 magic_flags = 6;
	required int64 random_seed = 7;
	optional float param1 = 8;
	optional float param2 = 9;
	required int32 trigger_flags = 10; //
}

// 施法结束通知 s=>c
message SCCastEnded
{
	option (msgid) = 3002;
	required int64 caster = 1;
	required int32 magic_type = 2;
	required int32 magic_type_root = 3;
}


// 引导开始通知 s=>c
message SCChannelBegan
{
	option (msgid) = 3004;
	required int64 caster = 1;
	required int32 magic_type = 2;
}

// 引导结束通知s=>c
message SCChannelEnded
{
	option (msgid) = 3005;
	required int64 caster = 1;
	required int32 magic_type = 2;
}

// 施法中断 c=>s
message CSInterruptCast
{
	option (msgid) = 3006;
	required int64 caster = 1;
}

// 施法中断通知 s=>c
message SCMagicInterruped
{
	option (msgid) = 3007;
	required int64 caster = 1;
	required int32 magic_type = 2;
	optional int32 error_code = 3;
	optional int64 id = 4;
}

message SMagicEffect
{
	required int32 effect_type = 1;
	required int32 effect_id = 2;
	required int64 targetId = 3;
	required float targetDamage = 4;
	required float targetHeal = 5;
	required int64 targetFlags = 6;
	optional int32 stiffTime = 7;
	optional int32 hitType = 8;
	optional int32 sunderStiffTime = 9;
	optional int32 sunderStopFrameTime = 10;
	optional float bounceDamage = 11;
}

message SCMagicEffect
{
	option (msgid) = 3008;
	required int64 caster = 1;
	required int32 magicType = 2;
	repeated SMagicEffect effect = 3;
	optional SHitInfo sblood = 4;
	optional SHitInfo dblood = 5;
}

// 客户端开为(蓄力技能)
message CSCastFire
{
	option (msgid) = 3009;
	required int32 magic_type = 1;
}

// 蓄力开始
message SCCastPrepareBegan
{
	option (msgid) = 3010;
	required int64 caster = 1;
	required int32 magic_type = 2;
	required int32 magic_type_root = 3;
	required int32 max_time = 4;
}

// 蓄力结束
message SCCastPrepareEnded
{
	option (msgid) = 3011;
	required int64 caster = 1;
	required int32 magic_type = 2;
	required int32 magic_type_root = 3;
}

message SHitInfo
{
	required int32 mesh_id = 1;
	required SVector3 pos = 2;
	required SVector3 dir = 3;
}

message CSMagicTrigger
{
		option (msgid) = 3012;
		required int64 sid = 1;
		required int64 did = 2;
		required int64 magicid = 3;
		required bool vaild = 4;
		optional SHitInfo sblood = 5;
		optional SHitInfo dblood = 6;
		
}

message SCInterruptFailed
{
		option (msgid) = 3013;
		required int64 caster = 1;
}

message SCMagicCooldown
{
	option (msgid) = 3020;
	required int64 id = 1;
	required int32 magic_type = 2;
	required int64 cooldown_ms = 3;
	required int32 cooldown_share_type = 4;
	required int64 cooldown_share_time = 5;
}

// 光环指令(部份状态可以接受指令)
message CSAuraInstruction
{
	option (msgid) = 3025;
	required int32 type = 1;
	optional float param1 = 2;
	optional float param2 = 3;
	optional float param3 = 4;
	optional float param4 = 5;
	
}

message SCAuraInstruction
{
	option (msgid) = 3026;
	required int64 id = 1;
    required int32 type = 2;
	required int64 aura_app_id = 3;
	optional float param1 = 4;
	optional float param2 = 5;
	optional float param3 = 6;
	optional float param4 = 7;
	optional float result1 = 8;
	optional float result2 = 9;
	optional float result3 = 10;
}

// -----------------------------------------

message SPhysicsForce
{
	required int32 type = 1;
	required float force = 2;
	optional float force_adjust_y = 4;
	optional float force_adjust_angle = 5;
	optional int32 force_height = 6;
	optional float force_if_top = 7;
	optional float force_if_middle = 8;
	optional float force_if_bottom = 9;
}

message SPhysicsTarget
{
	optional int32 region_type = 1;
	optional float region_param1 = 2;
	optional float region_param2 = 3;
	optional float region_param3 = 4;
	optional float region_param4 = 5;
	optional int64 single_target = 6;
}

message SCPhysicsForce
{
	option (msgid) = 3050;
	required SPhysicsForce def = 1;
	required SPhysicsTarget target = 2;
	optional SVector3 src_position = 3;
	optional SVector3 dst_position = 4;
}
// -----------------------------------------


// 新获得一个光环/效果
message SCAuraBegan
{
	option (msgid) = 3100;
	required SAura aura = 1;
}

// 一个光环/效果结束
message SCAuraEnded
{
	option (msgid) = 3101;
	required int64 owner = 1;
	required int64 id = 2;
	required int32 end_way = 3;
}

// -----------------------------------------

message SCAuraUpdate
{
	option (msgid) = 3102;
	required SAura aura = 1;
	required int32 update_way = 2;
	required int64 update_caster = 3;
}

// -----------------------------------------
// 子弹
// -----------------------------------------

message SCCollisionCrash
{
	option (msgid) = 3150;
	required int64 owner = 1;
	required int64 id = 2;
}

message SCCollisionStopped
{
	option (msgid) = 3151;
	required int64 id = 1;
}

// -----------------------------------------

// 击退消息
message SCKnockback
{
	option (msgid) = 3200;
	required int64 caster = 1;
	required int64 target = 2;
	required int32 magic_type = 3;
	required SVector3 target_position = 4;
	required float speed = 5;
	required int32 magic_flags = 6;
}

// 跳斩消息
message SCJumpAndChop
{
	option (msgid) = 3205;
	required int64 caster = 1;
	required int32 magic_type = 2;
	required SVector3 target_point = 3;
	required SVector3 jump_point = 4;
	required float speed = 5; //run speed
	required int64 time_run = 6; //ms
	required int64 time_jump = 7; //ms
}

// 冲锋
message SCCharge
{
	option (msgid) = 3210;
	required int64 caster = 1;
	required int32 magic_type = 2;
	required int32 effect_type = 3;
	required int32 effect_id = 4;
	required int32 effect_time = 5;
	required SVector3 target_point = 6;
};

// 连锁技能跳跃
message SCChainMagicJump
{
	option (msgid) = 3215;
	required int64 caster = 1;
	required int32 magic_type = 2; 
	required int64 jump_from = 3; 
	required int64 jump_to = 4;
	required int32 effect_type = 5;
	required int32 effect_id = 6;
};

// 黑龙之怒 -- 飙升
message SC_WOTBD_Soaring1
{
	option (msgid) = 3220;
	required int64 caster = 1;
	required int64 target = 2;
	required float time_ms = 3;
	required int32 magic_type = 4;
	required int32 effect_type = 5;
	required int32 effect_id = 6;
	required SVector3 soaring_pos = 7;
	required SVector3 start_pos = 8;
};



// 黑龙之怒 -- 俯冲
message SC_WOTBD_Subduction
{
	option (msgid) = 3221;
	required int64 caster = 1;
	required int64 target = 2;
	required float speed = 3; // 单位为每秒
	required int32 magic_type = 4;
	required int32 effect_type = 5;
	required int32 effect_id = 6;
	required SVector3 start_pos = 7;
}

// 黑龙之怒 -- 捕获
message SC_WOTBD_Capture
{
	option (msgid) = 3222;
	required int64 caster = 1;
	repeated int64 target = 2;
	required int32 magic_type = 3;
	required int32 effect_type = 4;
	required int32 effect_id = 5;
	required SVector3 start_pos = 6;
}

// 黑龙之怒 -- 捕获后飙升
message SC_WOTBD_Soaring2
{
	option (msgid) = 3223;
	required int64 caster = 1;
	required SVector3 soaring_pos = 2;
	required float time_ms = 3;
	required int32 magic_type = 4;
	required int32 effect_type = 5;
	required int32 effect_id = 6;
	required SVector3 start_pos = 7;
}

// 黑龙之怒 -- 捕获后返回
message SC_WOTBD_Return
{
	option (msgid) = 3224;
	required int64 caster = 1;
	required SVector3 position = 2;
	required float time_ms = 3;
	required int32 magic_type = 4;
	required int32 effect_type = 5;
	required int32 effect_id = 6;
	required SVector3 start_pos = 7;
}

// 黑龙之怒 -- 结束
message SC_WOTBD_Ended
{
	option (msgid) = 3225;
	required int64 caster = 1;
	required int32 magic_type = 2;
	required int32 effect_type = 3;
	required int32 effect_id = 4;
	required SVector3 start_pos = 5;
}

// 射线目标更新 target = 0表示无目标

message SCUpdateRayTarget
{
    option (msgid) = 3300;
    required int64 id = 1;
    required int64 target = 2;
}
// -------------------------------------------------------
// auto generate by ProbufAssembly
// ./proto\04000_04999_quest.proto
// -------------------------------------------------------

// 已接受的任务信息
message SQuestAccepted
{
	required int32 quest_type 		= 1; // 主任务任务ID
	repeated int32 quest_tasks 		= 2; // 任务目标（杀怪，对话，强化等）
	required int32 quest_state 		= 3; //	1: 可接受 2: 已接受 3: 已完成,未提交 4: 已完成,已提交
	required int32 child_quest_type = 4; //	当前节点任务ID
}

// 查询任务数据 登陆时
message CSQuestQuery
{
	option (msgid) = 4000;
}

// 查询任务数据 服务端返回
message SCQuestQuery
{
	option (msgid) = 4001;
	repeated SQuestAccepted accepted_quests	= 1; // 已接受的任务列表，节点任务包含在内
	repeated int32 acceptable_quests 		= 2; // 可接任务列表，不包括节点任务
}

// 查询Npc任务状态
message CSQuestQueryNpcState
{
	option (msgid) = 4002;
}

// 客户端请求: 接受任务
message CSQuestAccept
{
	option (msgid) = 4003;
	required int32 quest_type = 1;
}

// 服务端通知: 任务已接受
message SCQuestAccepted
{
	option (msgid) = 4004;
	required SQuestAccepted quest 		= 1; // 已接主任务
	optional SQuestAccepted child_quest	= 2; // 已接节点任务
}

// 客户端请求: 放弃任务
message CSQuestDrop
{
	option (msgid) = 4005;
	required int32 quest_type = 1;
}

// 服务端通知: 任务已放弃
message SCQuestDropped
{
	option (msgid) = 4006;
	required int32 quest_type 		= 1; // 已放弃主任务ID
	optional int32 child_quest_type = 2; // 已放弃节点任务ID
}

// 客户端请求: 完成任务
message CSQuestDone
{
	option (msgid) = 4007;
	required int32 quest_type = 1;
}

// 服务端通知: 完成已任务
message SCQuestDoned
{
	option (msgid) = 4008;
	required int32 quest_type = 1;
}

// 服务端通知: 任务状态更新
message SCQuestUpdate
{
	option (msgid) = 4009;
	required int32 tag						= 1; // 更新标记，0：更新已接任务状态；1：更新全部可接任务；2：更新全部Npc状态
	repeated SQuestAccepted accepted_quests = 2; // 需要更新状态的已接任务(包括节点)
	repeated int32 acceptable_quests 		= 3; // 全部可接任务
	repeated SNpcQuestState npc_states	 	= 4; // 全部NPC状态
}

// ---------------------------------------------------------------------------------------

message CSDialogNpc
{
	option (msgid) 			= 4200;
	required int64 npcId 	= 1;
}

message CSDialogTalk
{
	option (msgid) = 4201;
	required int64 npcId 	= 1;
	required int32 state 	= 2;	//state = 0下一步，1， 点击功能选项，2，可完成 3，可接， 4,未完成
	required int32 context 	= 3;	//上下文参数，任务相关存的是任务id
}

message SCDialogNpc
{
	option (msgid) 					= 4202;
	required int32 talkId 			= 1;	//默认对话
	repeated int32 functions	 	= 2;	//功能选项
	repeated int32 acceptableQuests 	= 3;	//可接受任务选项（可接任务ID）
	repeated int32 completeQuests 	= 4;	//可完成任务选项（可完成任务ID）
	repeated int32 underwayQuests 		= 5;	//进行中任务选项（进行中任务ID）
}

message SCDialogTalk
{
	option (msgid) = 4203;
	required int32 talkId = 1;
}

message SCQuestResult
{
	option (msgid) = 4204;
	required int32 resultId = 1;
}

// 开启副本信息
message SDungeonRecord
{
	required int32 dungeonId 		= 1; // 副本id
	required int32 score			= 2;

}
message SCUpdateDungeonRecord //副本数据
{
	option (msgid) = 4205;
	repeated SDungeonRecord info = 1;
		
}
// -------------------------------------------------------
// auto generate by ProbufAssembly
// ./proto\05000_05499_activity.proto
// -------------------------------------------------------
// 加入活动
message CSActivityJoin
{
	option (msgid) = 5000;
	required int32 activityID = 1;
}

// 加入活动返回消息
message SCActivityJoinResult
{
	option (msgid) = 5001;
	required int32 flag = 1;
}

message CSActivityRewardQuery
{
	option (msgid) = 5002;
}
message SCActivityRewardResult
{
	option (msgid) = 5003;
	required int32 activitys = 1;
	repeated SUnitAttrValue attrs = 2;
}
message CSActivityReward
{
	option (msgid) = 5004;
	required int32 activityID = 1;
}
message SCActivityDelete
{
	option (msgid) = 5005;
	required int32 activityID = 1;	
}
message SCActivityStatus
{
	option (msgid) = 5006;
	required int32 activityID = 1;	
	required int32 status = 2;
}

message CSActivityAuction
{
	option (msgid) = 5007;
	required int32 activityID = 1;	
	required int32 money = 2;
}

message SCActivityAuction
{
	option (msgid) = 5008;
	required int32 activityID = 1;	
	required int32 status = 2;
}

message CSActivityGetBuff
{
	option (msgid) = 5009;
	required int32 activityID = 1;
	required int32 buffID = 2;	
}


message SCActivityDamage
{
	option (msgid) = 5102;
	required int64 id = 1;
	required float damage = 2;
	required bytes name = 3;
	required int32 num = 4;
}

message SCActivityBoss
{
	option (msgid) = 5103;
	required int64 id = 1;
	required bytes name = 2;
}

message CSActivityBoss
{
	option (msgid) = 5104;
	required int64 id = 1;
}

message SCActivityNpcID
{
	option (msgid) = 5105;
	required int64 id = 1;
}

message CSActivityStartCtrl
{
	option (msgid) = 5106;
	required int64 id = 1;
}

message CSActivityStopCtrl
{
	option (msgid) = 5107;
}
// -------------------------------------------------------
// auto generate by ProbufAssembly
// ./proto\05500_05600_guide.proto
// -------------------------------------------------------
message SCGuideActive
{
	option (msgid) = 5500;
	required int32 id = 1;
}

message SCGuideDeactive
{
	option (msgid) = 5501;
	required int32 id = 1;
}

message CSGuideDeactive
{
	option (msgid) = 5502;
	required int32 id = 1;
}

message CSGuideLogin
{
	option (msgid) = 5503;
}
// -------------------------------------------------------
// auto generate by ProbufAssembly
// ./proto\06000_09999_items.proto
// -------------------------------------------------------

// 装备相关

// 客户端请求: 装备一件物品
message CSEquip
{
	option (msgid) = 6005;
	required int32 src_bag = 1;
	required int32 dst_bag = 2;
	required int32 src_idx = 3;
	required int32 dst_idx = 4;
}

// 服务器通知: 装备物品反馈
message SCEquipResult
{
	option (msgid) = 6006;
	required int32 result = 1;
	required int64 id = 2;
	required int32 src_bag = 3;
	required int32 dst_bag = 4;
	required int32 src_idx = 5;
	required int32 dst_idx = 6;
	optional SEquipObject equipObject = 7;
}

// 客户端请求: 卸载一件物品
message CSUnEquip
{
	option (msgid) = 6010;
	required int32 src_bag = 1;
	required int32 dst_bag = 2;
	required int32 src_idx = 3;
	required int32 dst_idx = 4;
}

// 服务器通知: 卸载物品反馈
message SCUnEquipResult
{
	option (msgid) = 6011;
	required int32 result = 1;
	required int64 id = 2;
	required int32 src_bag = 3;
	required int32 dst_bag = 4;
	required int32 src_idx = 5;
	required int32 dst_idx = 6;
	optional SEquipObject equipObject = 7;
}

// 客户端请求: 丢弃一件装备
message CSEquipDiscard
{
	option (msgid) = 6020;
	required int32 src_idx = 1;
}

// 服务器通知: 丢弃装备反馈
message SCEquipDiscardResult
{
	option (msgid) = 6021;
	required int32 result = 1;
	required int32 src_idx = 2;
}



// 物品相关

// 客户端请求: 获取物品列表
message CSItemQuery
{
	option (msgid) = 7010;
	required int32 item_bag = 1;
}

// 服务端通知: 下发物品列表
message SCItemQuery
{
	option (msgid) = 7011;
	required int32 item_bag = 1;
	required int32 bag_size = 2;
	repeated SItem items = 3;
}

// 服务端通知: 增加一个物品
message SCItemAdd
{
	option (msgid) = 7020;
	required SItem items = 1;
}

// 服务端通知: 删除一个物品
message SCItemDel
{
	option (msgid) = 7031;
	required int64 item_id = 1;
	required int32 item_bag = 2;
}

// 客户端请求: 丢弃一件物品
message CSItemDiscard
{
	option (msgid) = 7032;
	required int32 item_bag = 1;
	required int32 item_idx = 2;
}

// 服务器通知: 丢弃物品反馈
message SCItemDiscard
{
	option (msgid) = 7033;
	required int32 result = 1;
	required int32 item_bag = 2;
	required int32 item_idx = 3;
}

// 服务端通知: 更新物品信息
message SCItemUpdate
{
	option (msgid) = 7040;
	required SItem items = 1;
}

// 客户端请求: 交换两个物品
message CSItemSwap
{
	option (msgid) = 7050;
	required int32 src_bag = 1;
	required int32 dst_bag = 2;
	required int32 src_idx = 3;
	required int32 dst_idx = 4;
}

// 服务端通知: 交换物品反馈
message SCItemSwap
{
	option (msgid) = 7051;
	required int32 result = 1;
	required int32 src_bag = 2;
	required int32 dst_bag = 3;
	required int32 src_idx = 4;
	required int32 dst_idx = 5;
}

// 客户端请求: 使用一个物品
message CSItemUse
{
	option (msgid) = 7060;
	required int64 item_id = 1;
	required int32 item_bag = 2;
}

// 客户端请求: 出售背包物品
message CSItemSell
{
	option (msgid) = 7070;
	required int32 item_bag = 1;
	repeated int64 item_ids = 2;
}

// 服务端通知: 出售物品反馈
message SCItemSell
{
	option (msgid) = 7071;
	required int32 result = 1;
	required int32 silver = 2;
}

// 客户端请求: 整理背包物品
message CSItemPack
{
	option (msgid) = 7080;
	required int32 item_bag = 1;
}

// 服务端通知: 整理背包反馈
message SCItemPack
{
	option (msgid) = 7081;
	required int32 result = 1;
	required int32 item_bag = 2;
}

// 客户端请求: 背包容量扩充
message CSBagExpand
{
	option (msgid) = 7090;
	required int32 item_bag = 1;
	required int32 inc_size = 2;
}

// 服务端通知: 背包扩充反馈
message SCBagExpand
{
	option (msgid) = 7091;
	required int32 result = 1;
	required int32 item_bag = 2;
	required int32 new_size = 3;
}


// -------------------------------------------------------------------------
// -------------------------------------------------------------------------

// 服务端通知: 合成物品准备
message SCItemSynthesisStart
{
	option (msgid) = 7200;
	required int32 item_bag = 1;
	required int32 item_idx = 2;
}

// 客户端请求: 配方合成物品
message CSItemSynthesis
{
	option (msgid) = 7201;
	required int64 item_id = 1;
	required bool do_cost_gold = 2;
}

// 服务端通知: 合成物品反馈
message SCItemSynthesis
{
	option (msgid) = 7202;
	required int32 result = 1;
}


// -----------------------------------------

// 客户端请求: 启动装备升阶
message CSEquipUpgradeStart
{
	option (msgid) = 7230;
	required int32 item_bag = 1;
	required int32 item_idx = 2;
}

// 服务端通知: 装备升阶启动
message SCEquipUpgradeStart
{
	option (msgid) = 7231;
	required int32 item_bag = 1;
	required int32 item_idx = 2;
}

// 客户端请求: 请求装备升阶
message CSEquipUpgrade
{
	option (msgid) = 7232;
	required int64 item_id = 1;
	required bool do_cost_gold = 2;
	required bool keep_enchant_lvl = 3;
}

// 服务端通知: 升阶结果反馈
message SCEquipUpgrade
{
	option (msgid) = 7233;
	required int32 result = 1;
}


// -----------------------------------------

// 客户端请求: 查询强化冷却
message CSEquipEnchantCDQuery
{
	option (msgid) = 7240;
}

// 服务端通知: 查询冷却反馈
message SCEquipEnchantCDQuery
{
	option (msgid) = 7241;
	required int64 time = 1;
	required int32 flag = 2;
}

// 服务端通知: 强化冷却更新
message SCEquipEnchantCDUpdate
{
	option (msgid) = 7242;
	required int64 time = 1;
	required int32 flag = 2;
}

// 客户端请求: 清除强化冷却
message CSEquipEnchantCDClear
{
	option (msgid) = 7243;
}

// 服务端通知: 清除冷却反馈
message SCEquipEnchantCDClear
{
	option (msgid) = 7244;
	required int32 result = 1;
	required int32 gold_cost = 2;
}

// 客户端请求: 装备强化启动
message CSEquipEnchantStart
{
	option (msgid) = 7250;
}

// 服务端通知: 启动装备强化
message SCEquipEnchantStart
{
	option (msgid) = 7251;
	required int32 result = 1;
}

// 客户端请求: 请求装备强化
message CSEquipEnchant
{
	option (msgid) = 7252;
	required int32 item_bag = 1;
	required int32 item_idx = 2;
	required bool keep_enchant_double = 3;
}

// 服务端通知: 强化结果反馈
message SCEquipEnchant
{
	option (msgid) = 7253;
	required int32 result = 1;
}


// -----------------------------------------

// 客户端请求: 灵石祝福启动
message CSItemBlessStart
{
	option (msgid) = 7260;
}

// 服务端通知: 启动灵石祝福
message SCItemBlessStart
{
	option (msgid) = 7261;
	required int32 result = 1;
}

// 客户端请求: 激活祝福属性
message CSItemBlessActive
{
	option (msgid) = 7262;
	required int32 item_bag = 1;
	required int32 item_idx = 2;
	required int32 attr_idx = 3;
}

// 服务端通知: 激活结果反馈
message SCItemBlessActive
{
	option (msgid) = 7263;
	required int32 result = 1;
}

// 客户端请求: 请求灵石祝福
message CSItemBless
{
	option (msgid) = 7264;
	required int32 item_bag = 1;
	required int32 item_idx = 2;
	repeated int32 attr_lock_idxs = 3;
	required bool random_or_target = 4;
	optional int32 target_attr_id = 5;
	optional int32 target_attr_range = 6;
	optional int32 target_count = 7;
}

// 服务端通知: 祝福结果反馈
message SCItemBless
{
	option (msgid) = 7265;
	required int32 result = 1;
	required bool random_or_target = 2;
	optional int32 target_count = 3;
}

//------------------------------------------
// 装备精炼
message CSEquipRefine
{
	option (msgid) = 7280;
	required int32 bag = 1;
	required int32 index = 2;
}

// 装备精炼反馈
message SCEquipRefineResult
{
	option (msgid) = 7281;
	required int32 result = 1;
}

// -----------------------------------------
// 拾取物品
message CSPickupItem
{
	option (msgid) = 7300;
	required int64 id = 1;
}

message SCPickupItemResult
{
	option (msgid) = 7301;
	required int64 id = 1;
	required int32 result = 2;
}

// ------------------------------------------
// 龙相关
// ------------------------------------------

// -----------------------------------------
// 使用龙蛋
message SCUseDragonEggResult
{
	option (msgid) = 7500;
	required int32 result = 1;
}

message CSDragonQuery
{
	option (msgid) = 7510;
	required int32 dragon_bag = 1;
}

message SCDragonQuery
{
	option (msgid) = 7511;
	required int32 dragon_bag = 1;
	required int32 bag_size = 2;
	repeated SDragon dragons = 3;
}

message SCDragonAdd
{
	option (msgid) = 7512;
	required SDragon dragon = 1;
}

message CSDragonDiscard
{
	option (msgid) = 7513;
	required int32 dragon_bag = 1;
	required int32 dragon_idx = 2;
}

message SCDragonDiscard
{
	option (msgid) = 7514;
	required int32 result = 1;
	required int32 dragon_bag = 2;
	required int32 dragon_idx = 3;
}

message CSDragonRename
{
	option (msgid) = 7515;
	required int32 dragon_bag = 1;
	required int32 dragon_idx = 2;
	required bytes dragon_name = 3;
}

message SCDragonRename
{
	option (msgid) = 7516;
	required int32 result = 1;
	required int32 dragon_bag = 2;
	required int32 dragon_idx = 3;
	required bytes dragon_name = 4;
}

message CSDragonEquip
{
	option (msgid) = 7517;
	required int32 src_bag = 1;
	required int32 dst_bag = 2;
	required int32 src_idx = 3;
	required int32 dst_idx = 4;
}

message SCDragonEquip
{
	option (msgid) = 7518;
	required int32 result = 1;
	required int32 src_bag = 2;
	required int32 dst_bag = 3;
	required int32 src_idx = 4;
	required int32 dst_idx = 5;
}

message CSDragonUnEquip
{
	option (msgid) = 7519;
	required int32 src_bag = 1;
	required int32 dst_bag = 2;
	required int32 src_idx = 3;
	required int32 dst_idx = 4;
}

message SCDragonUnEquip
{
	option (msgid) = 7520;
	required int32 result = 1;
	required int32 src_bag = 2;
	required int32 dst_bag = 3;
	required int32 src_idx = 4;
	required int32 dst_idx = 5;
}

message CSDragonSummon
{
	option (msgid) = 7521;
	required int32 dragon_bag = 1;
	required int32 dragon_idx = 2;
}

message SCDragonSummon
{
	option (msgid) = 7522;
	required int32 result = 1;
	required int32 dragon_bag = 2;
	required int32 dragon_idx = 3;
}

message SDragonCooldown
{
	required int32 bag = 1;
	required int32 index = 2;
	required int64 cooldown_ms = 3;
}

message SCDragonCooldown
{
	option (msgid) = 7523;
	repeated SDragonCooldown object = 1;
}

message CSDragonSwap
{
	option (msgid) = 7524;
	required int32 bag = 1;
	required int32 src_idx = 2;
	required int32 dst_idx = 3;
}

message SCDragonSwap
{
	option (msgid) = 7525;
	required int32 result = 1;
	required int32 bag = 2;
	required int32 src_idx = 3;
	required int32 dst_idx = 4;
}
// --------------------------------------
//临时武器换装消息
message CSEquipTempWeapon
{
	option (msgid) = 7526;
	required int32 temp_weapon_id = 1;
}

message SCEquipTempWeapon
{
	option (msgid) = 7527;
	required int32 temp_weapon_id = 1;
	required int64 human_id = 2;
}
// -------------------------------------------------------
// auto generate by ProbufAssembly
// ./proto\10000_10999_astrology.proto
// -------------------------------------------------------
// -----------------------------------------
//占星相关 
message SAstrologyResult
{
	required int32 level = 1;				//占星级别
	required int32 exp = 2;					//占星经验
	required int32 count_scrit = 3;			//小暴击次数
	required int32 count_bcrit = 4;			//大暴击次数
}

message CSAstrologyQuery
{
	option (msgid) = 10100;
}

message SCAstrologyQueryResult
{
	option (msgid) = 10101;
	required int32 level = 1;
	required int32 exp = 2;
}

message CSAstrology
{
	option (msgid) = 10102;
	required int32 flags = 1;
}

message SCAstrologyResult
{
	option (msgid) = 10103;
	required int32 flags = 1;
	required int32 result = 2;
	optional SAstrologyResult astroResult = 3;
}

message SCOnekeyAstrologyResult
{
	option (msgid) = 10104;
	required int32 flags = 1;
	required int32 result = 2;
	required SAstrologyResult astroResult = 3;
}

message CSRunePickup
{
	option (msgid) = 10105;
	required int32 bag = 1;
	required int32 index = 2;
}

message SCRunePickupResult
{
	option (msgid) = 10106;
	required int32 result = 1;
}

message CSRuneOnekeyPickup
{
	option (msgid) = 10107;
}

message SCRuneOnekeyPickupResult
{
	option (msgid) = 10108;
	required int32 result = 1;
}

message CSRuneDevour
{
	option (msgid) = 10109;
	required int32 bag = 1;
	required int32 srcIdx = 2;
	required int32 dstIdx = 3;
}

message SCRuneDevourResult
{
	option (msgid) = 10110;
	required int32 result = 1;
}

message CSRuneOnekeyDevour
{
	option (msgid) = 10111;
}

message SCRuneOnekeyDevourResult
{
	option (msgid) = 10112;
	required int32 result = 1;
}

message CSRuneInlay
{
	option (msgid) = 10113;
	required int32 srcBag = 1;
	required int32 srcIdx = 2;
	required int32 dstBag = 3;
	required int32 dstIdx = 4;
}

message SCRuneInlayResult
{
	option (msgid) = 10114;
	required int32 result = 1;
}

message CSRuneRemove
{
	option (msgid) = 10115;
	required int32 srcBag = 1;
	required int32 srcIdx = 2;
	required int32 dstBag = 3;
}

message SCRuneRemoveResult
{
	option (msgid) = 10116;
	required int32 result = 1;
}

message CSRuneLock
{
	option (msgid) = 10117;
	required int32 bag = 1;
	required int32 index = 2;
}

message SCRuneLockResult
{
	option (msgid) = 10118;
	required int32 result = 1;
}

message CSRuneUnLock
{
	option (msgid) = 10119;
	required int32 bag = 1;
	required int32 index = 2;
}

message SCRuneUnLockResult
{
	option (msgid) = 10120;
	required int32 result = 1;
}
// -------------------------------------------------------
// auto generate by ProbufAssembly
// ./proto\11000_11999_dma.proto
// -------------------------------------------------------

// --------------副本主玩法 cbh -----------------------------------------------------
message SC_DMA_PoltStart
{
	option(msgid) = 11000;
	optional int32 flags = 1;
}

message SC_DMA_PoltClean
{
	option(msgid) = 11001;
	required int32 flags = 1;
}

message SC_DMA_PoltCameraStart
{
	option(msgid) = 11010;
	required int32 flags = 1;
	required int32 type = 2; //1为npctype 2为actionId
	required int32 arg = 3;
}

message SC_DMA_PoltCameraClean
{
	option(msgid) = 11011;
	required int32 flags = 1;
}

message SC_DMA_PoltSpeak
{
	option(msgid) = 11030;
	required int32 flags = 1;
	required int64 refid = 2;
	required int32 npc_type = 3;
	required int32 npc_talk_id = 4;
	required int32 npc_talk_time = 5;
	required int32 player_talk_id = 6;
	required int32 speak_type = 7; //1:黑屏2：对话 3：冒泡对话 4: 出按钮对话
}

message CS_DMA_SpeakSkip
{
	option(msgid) = 11031;
	required int64 refid = 1;
}

message CS_DMA_SpeakAllSkip
{
	option(msgid) = 11032;
	required int64 refid = 1;
}

message SC_DMA_CountDown
{
	option(msgid) = 11040;
	required int32 flags = 1;
	required int32 countdown_time_ms = 2;
}

message SC_DMA_WaveStart
{
	option(msgid) = 11050;
	required int32 flags = 1;
	required int32 wave = 2;
}

message SC_DMA_WaveClean
{
	option(msgid) = 11051;
	required int32 flags = 1;
	required int32 wave = 2;
}

message SC_DMA_Score
{
	option(msgid) = 11060;
	required int32 star_finish_time = 1;
	required int32 star_damage_maked = 2;
	required int32 star_damage_injured = 3;
	required int32 star_overall = 4;
}

//当前连接数
message	SC_DMA_BatterCount
{
	option (msgid) = 11061;
	required int32 batterCount = 1;
}

//播放离子特性
message	SC_DMA_ParticleStart
{
	option (msgid) = 11062;
	required int32 particleId = 1;
}




// -------------------------------------------------------
// auto generate by ProbufAssembly
// ./proto\12000_12999_shop.proto
// -------------------------------------------------------
// -----------------------------------------

// 商店相关的消息

message CSShopOpen
{
	option (msgid) = 12000;
	required int32 shopid = 1;
}

message SCShopOpen
{
	option (msgid) = 12001;
	required int32 result = 1;
	required int32 shopid = 2;
	repeated SShopItem shop_items = 3;
	repeated SItem recycle_items = 4;
}

message CSShopBuy
{
	option (msgid) = 12004;
	required int32 shopid = 1;
	required int32 item_type = 2;
	required int32 item_count = 3;
}

message SCShopBuyResult
{
	option (msgid) = 12005;
	required int32 result = 1;
	required int32 shopid = 2;
	required int32 item_type = 3;
	required int32 item_count = 4;
}

message CSShopBuyRecycleBin
{
	option (msgid) = 12006;
	required int32 item_index = 1;
}

message SCShopBuyRecycleBinResult
{
	option (msgid) = 12007;
	required int32 result = 1;
	required int32 item_index = 2;
}

message CSShopSell
{
	option (msgid) = 12008;
	required int32 item_bag = 1;
	required int32 item_position = 2;
}

message SCShopSellResult
{
	option (msgid) = 12009;
	required int32 result = 1;
	optional SItem item_sold = 2;
}
// -------------------------------------------------------
// auto generate by ProbufAssembly
// ./proto\13000_13999_legion.proto
// -------------------------------------------------------
// -----------------------------------------

// 军团相关的消息

message CSCreateLegion
{
	option (msgid) = 13000;
	required int32 legionid = 1;
	required SVector3 start_pos = 2;
	required SVector3 orientation = 3;
}

message Soldier
{
	required int32 soldier_type = 1;
	required int64 soldier_id = 2;
	required int32 pos = 3;
}

message SCSyncLegion
{
	option (msgid) = 13001;
	required int32 legionid = 1;
	required int64 ownerid = 2;
	repeated Soldier soliders = 3;
	optional int64 leader_id = 4;
	optional int32 leader_type = 5;
}

message SCClearLegion
{
	option (msgid) = 13002;
	required int32 legionid = 1;
}
// -------------------------------------------------------
// auto generate by ProbufAssembly
// ./proto\20000_29999_misc.proto
// -------------------------------------------------------

// -----------------------------------------

message SCCharacterKick
{
	option (msgid) = 20000;
	required int32 reason = 1;
}

// -----------------------------------------

message SCLevelup
{
	option (msgid) = 20001;
	required int64 id = 1;
	required int32 level = 2;
}

// PING消息
message CSPing
{
	option (msgid) = 20010;
	required float time = 1;
}

// PING的响应消息
message SCPong
{
	option (msgid) = 20011;
	required float time = 2;
}

// -----------------------------------------

// 传送
message SCTransport
{
	option (msgid) = 20100;
	required int32 idScene = 1;
	required int64 idDungeon = 2;
	required SVector3 pos = 3;
	required SVector3 ori = 4;
}


// -----------------------------------------

message SCDungeonFinished 
{
	option (msgid) = 22000;
	required int32 mapID = 1;
}

// -----------------------------------------

message SCActionGroup
{
	option (msgid) = 22100;
	required int64 actionID = 1;
	required int32 section = 2;
	required int32 status	= 3;
	required int64 guid	= 4;
}

message SCEnvironmentalAnimation
{
	option (msgid) = 22200;
}

message SCRoleAction
{
	option (msgid) = 22300;
	required int32 roleID = 1;
	required SActionObject actionObject = 2;
}

message CSRoleAction
{
	option (msgid) = 22301;
	required bytes actionName = 1;
}

message SCPlayAction
{
	option (msgid) = 22400;
	required int64 id = 1;
	required int64 actionID = 2;
	required int64 random_seed = 3;
}

// -----------------------------------------

// 开始控制
message SCControllBegan
{
	option (msgid) = 22500;
	required int64 id = 1;
	required int64 target = 2;
    required int32 type = 3;
}

// 结束控制
message SCControllEnded
{
	option (msgid) = 22501;
	required int64 id = 1;
	required int64 target = 2;
	required SVector3 position = 3;
    required int32 type = 4;
    required int32 reason = 5;
}

//控制失败
message SCControllFailed
{
	option (msgid) = 22502;
	required int64 id = 1;
	required int64 target = 2;
	required int32 type = 3;
	required int32 reason = 4;
}


// -----------------------------------------

message CSEnterDungeon
{
    option (msgid) = 23000;
    required int64 basemap = 1;
    required int64 gamemap = 2; // ==0表示创新副本
    optional int64 monsterid = 3;
}

message SCEnterDungeon
{
    option (msgid) = 23001;
    required int64 basemap = 1;
    required int32 error_code = 2;
}

message CSLeaveDungeon
{
	option (msgid) = 23002;
	required int64 self = 1;
}

// ----------------------------

message CSGameObjectTrigger
{
	option (msgid) = 24000;
	required int64 id = 1;	
}
// -------------------------------------------------------
// auto generate by ProbufAssembly
// ./proto\30000_30999_dungeonscript.proto
// -------------------------------------------------------

message SCLaunchPolt
{
	option (msgid) = 30000;
	required int32 id = 1;
	required int64 context = 2;
}

message CSPoltCompleted
{
	option (msgid) = 30001;
	required int32 id = 1;
	required int64 context = 2;
}

message SCSyncCamp
{
	option (msgid) = 30002;
	required int64 id = 1;
	required int32 camp = 2;
}
// -------------------------------------------------------
// auto generate by ProbufAssembly
// ./proto\31000_31999_chat_mail.proto
// -------------------------------------------------------

// 广播相关
message CSChat
{
	option (msgid) = 31000;
	required int32 mode = 1;
	required bytes text = 2;
	required int32 text_type = 3;
	optional int64 to = 4;
	optional bytes to_name = 5;
}

message SCChat
{
	option (msgid) = 31001;
	required int32 mode = 1;
	required int64 from = 2;
	required bytes from_name = 3;
	required bytes text = 4;
	required int32 text_type = 5;
}

message SCNotify
{
	option (msgid) = 31004;
	required int32 mode = 1;
	required int32 text_id = 2;
	repeated bytes text_args = 3;
	required int32 text_type = 4;
}

// 邮件相关
message CSQueryMailList
{
	option (msgid) = 31010;
	required int64 id = 1;
}

message SCQueryMailListResult
{
	option (msgid) = 31011;
	repeated SMail mails = 1;
}

message SCMailNotify
{
	option (msgid) = 31012;
	required SMail mail = 1;
}

message CSMailRecved
{
	option (msgid) = 31013;
	required int64 id = 1;
	required int64 mail_id = 2;
}

message CSQueryChatMsgList
{
	option (msgid) = 31020;
}

message SCQueryChatMsgListResult
{
	option (msgid) = 31021;
	repeated SChatMsg msgs = 1;
}

// 聊天相关
message CSChatMsgSend
{
	option (msgid) = 31022;
	required int64 to = 1;
	required int32 to_sex = 2;
	required bytes to_name = 3;
	required bytes content = 4;
}

message SCChatMsgNotify
{
	option (msgid) = 31023;
	required SChatMsg msg = 1;
}

message CSChatMsgRecved
{
	option (msgid) = 31024;
	required int64 from = 1;
	required int64 timestamp = 2;
}

message CSQueryChatContactList
{
	option (msgid) = 31030;
}

message SCQueryChatContactListResult
{
	option (msgid) = 31031;
	repeated SChatContact contacts = 1;
}

message SCUpdateChatContact
{
	option (msgid) = 31032;
	required SChatContactStatus status = 1;
}
// -------------------------------------------------------
// auto generate by ProbufAssembly
// ./proto\32000_39999_slg.proto
// -------------------------------------------------------
//----------------------------------------------------------------------
//slg相关

message CSEnableCastle
{
	option (msgid) = 32000;
	required int64 id = 1;
}

message SCEnableCastleResult
{
	option (msgid) = 32001;
	required int32 result = 1;
}

message CSEnterCastle
{
	option (msgid) = 32002;
	required int64	id = 1;
}

message SCEnterCastleResult
{
	option (msgid) = 32003;
	required int32	result = 1;
}

message CSLeaveCastle
{
	option (msgid) = 32004;
	required int64	id = 1;
}

message SCLeaveCastleResult
{
	option (msgid) = 32005;
	required int32	result = 1;
}

//-----------------------------------------------------------------
message SCastleObject
{
	required int32 level = 1;
	repeated SHarbourObject harbour = 2;
	repeated SDragonFieldObject dragonField = 3;
}

message SHarbourObject
{
	required int32 index = 1;
	optional int32 level = 2;
	optional int32 flushLv = 3;
	optional int64 income = 4;
	optional int64 timer = 5;
}

message SDragonFieldObject
{
	required int32 index = 1;
	optional int32 level = 2;
	optional int32 flushLv = 3;
	optional int64 income = 4;
	optional int64 timer = 5;
}

//-------------------------------------------------------------------
//城堡相关

message CSQueryCastleInfo
{
	option (msgid) = 32010;
	required int64	id = 1;
}

message SCQueryCastleInfoResult
{
	option (msgid) = 32011;
	required int64 id = 1;
	required int32 result = 2;
	optional SCastleObject castle = 3;
}

message CSCastleLevelUp
{
	option (msgid) = 32012;
	required int64	id = 1;
}

message SCCastleLevelUpResult
{
	option (msgid) = 32013;
	required int32 result = 1;
	optional int32 level = 2;
}

//-------------------------------------------------------------------
//港口相关
message CSQueryHarbourInfo
{
	option (msgid) = 32030;
	required int64	id = 1;
	required int32 index = 2;
}

message SCQueryHarbourInfoResult
{
	option (msgid) = 32031;
	required int64 id = 1;
	required int32 index = 2;
	required int32 result = 3;
	optional int32 flushCount = 4;
}

message CSHarbourLevelup
{
	option (msgid) = 32034;
	required int64 id = 1;
	required int32 index = 2;
}

message SCHarbourLevelupResult
{
	option (msgid) = 32035;
	required int32 index = 1;
	required int32 result = 2;
}

message CSHarbourFlush
{
	option (msgid) = 32036;
	required int64 id = 1;
	required int32 index = 2;
}

message SCHarbourFlushResult
{
	option (msgid) = 32037;
	required int32 index = 1;
	required int32 result = 2;
}

message CSHarbourTrade
{
	option (msgid) = 32038;
	required int64 id = 1;
	required int32 index = 2;
}

message SCHarbourTradeResult
{
	option (msgid) = 32039;
	required int32 index = 1;
	required int32 result = 2;
}

message CSHarbourHarvest
{
	option (msgid) = 32040;
	required int64 id = 1;
	required int32 index = 2;
}

message SCHarbourHarvestResult
{
	option (msgid) = 32041;
	required int32 index = 1;
	required int32 result = 2;
}

message SCHarbourRefresh
{
	option (msgid) = 32042;
	required int64 id = 1;
	optional int32 flushCount = 2;
	repeated SHarbourObject harbour = 3;
}

//-------------------------------------------------------------------
//龙苑相关
message CSQueryDragonFieldInfo
{
	option (msgid) = 32050;
	required int64	id = 1;
	required int32 index = 2;
}

message SCQueryDragonFieldInfoResult
{
	option (msgid) = 32051;
	required int64 id = 1;
	required int32 index = 2;
	required int32 result = 3;
	optional int32 flushCount = 4;
}

message CSDragonFieldLevelup
{
	option (msgid) = 32054;
	required int64 id = 1;
	required int32 index = 2;
}

message SCDragonFieldLevelupResult
{
	option (msgid) = 32055;
	required int32 index = 1;
	required int32 result = 2;
}

message CSDragonFieldFlush
{
	option (msgid) = 32056;
	required int64 id = 1;
	required int32 index = 2;
}

message SCDragonFieldFlushResult
{
	option (msgid) = 32057;
	required int32 index = 1;
	required int32 result = 2;
}

message CSDragonFieldTrain
{
	option (msgid) = 32058;
	required int64 id = 1;
	required int32 index = 2;
}

message SCDragonFieldTrainResult
{
	option (msgid) = 32059;
	required int32 index = 1;
	required int32 result = 2;
}

message CSDragonFieldHarvest
{
	option (msgid) = 32060;
	required int64 id = 1;
	required int32 index = 2;
}

message SCDragonFieldHarvestResult
{
	option (msgid) = 32061;
	required int32 index = 1;
	required int32 result = 2;
}

message SCDragonFieldRefresh
{
	option (msgid) = 32062;
	required int64 id = 1;
	optional int32 flushCount = 2;
	repeated SDragonFieldObject dragonField = 3;
}

//-----------------------------------------------------
