<?xml version="1.0" encoding="UTF-8"?>
<!--
	使用方法:RPCMsgs包含了所有的RPC的消息.
		DefaultParams和LongDefaultParams:
			功能:
				系统默认参数值.
			填写方法:
				如果需要增加新的类型.这个新类型必须包含默认参数.
				默认参数需要在<DefaultParams />中声明类型和值.类型只能为1个单字.不能出现const char * 或者Msg::Chunk这种.一行可以填写多个
				多个字节的默认参数通过LongDefaultParams方式填写.
				Param中涉及到 [] 中括号的是用来表示 <> 尖括号,是因为xml支持不好<>
		
		SpecialDefaultParams:
			功能:
				系统默认参数值.针对一些模板类的非常特殊的参数.
			填写方法:
				type:
					参数的类型.
				suffix:
					生成默认参数时,在type的后面加上后缀
				prefix:
					生成默认参数时,在type的最前面加上后缀				
				specialType:
					根据不同的规则生成不同的默认参数.
					0代表的是标准库中的容器,默认是根据模板,加上后缀即可.
					
		Refers:
			功能:
				函数参数是否是通过引用来使用.默认非基本类型的都是引用,除非有unfer
			填写方法:
				默认参数中的值在这里填写了引用,会在生成的时候默认带有引用类型.基本类型不能使用引用.去掉引用,在param中填写unrefer属性.值随便写.推荐写"!&"
				 
		RpcServerName:指的是作为RPC服务器的功能.
			功能:
				指定当前使用RPC功能包含的服务器
			使用方法:
				serverName: 
					指的是当前服务器的名字.主要作用为作为client发起端,server接收端,proxy代理转发端.
				include: 
					需要包含的继承自RPCInterface的class的头文件包含路径.即:当前服务器的路径.
				namespace:
					指的是当前RPC服务器所使用的命名空间
				rpcInterface:
					指的是当前RPC服务器继承自RPCInterface的接口.
				outputPath: 
					当前的RPC服务器输出的文件位置.注意末尾加/				
		RPCS:
			功能:
				定义各个服务器使用的所有的RPC			
			RpcData:
				功能:
					RPC的参数类型可以传递RpcData.相当于定义一个结构体,传递消息时,大家可以共用一份.
				使用方法:
					同param参数.
			Table: 
				功能:
					定义一个RPC
				name:
					RPC名字
				syncType:
					0代表同步.1代表异步,
				timeout:
					当前RPC最大超时时间,默认为15秒
				以下功能为可以使用,也可以不使用的功能.他和Targets是重复的功能,两个只需要填一个即可.
					server:					
						当前RPC远程调用的服务器的功能是作为server
					serverClass:
						当前RPC远程调用的服务器对象使用的类
					serverInclude:
						当前RPC远程调用的服务器对象所在的头文件.
					proxy:					
						当前RPC远程调用的代理服务器的功能是作为proxy
					proxyClass:
						当前RPC远程调用的代理服务器对象使用的类
					proxyInclude:
						当前RPC远程调用的代理服务器对象所在的头文件.
					client:					
						当前RPC远程调用的服务器的功能是作为client
					clientClass:
						当前RPC远程调用的服务器对象使用的类
					clientInclude:
						当前RPC远程调用的服务器对象所在的头文件.
					支持的服务器类型,必须和上面登记的一样.
						client="Client" proxy="Proxy" server="Server"
			call和Return:
				功能:
					call为一个RPC的发起调用.或者超时时调用的函数.
					return为RPC从服务器返回的多个值.代码中使用RPCReturnXX方式返回
				使用方法:
					type:变量类型.
					name:变量名字.
					default:变量默认值
			Targets:
				功能:
					定义当前RPC在哪些服务器中使用.
				使用方法:
					Client:为发起端调用.这里需要和ServerName对应.
					Proxy:为代理转发.这里需要和ServerName对应.
					Server:为服务器使用,这里需要和ServerName对应.
					
	备注:
		XML常用转义字符:
			< 	&lt;	小于号 
			> 	&gt;	大于号 
			&	&amp;	逻辑与 
			'	&apos;	单引号 
			"	&quot;	双引号 

		
-->


<RpcMsgs>	
	<!--
		以下为基本类型,在Parameter中含有的.也可以在代码中定义,不过需要的是只能为一个单词.当然也可以自定义rpcdata
		默认值的定义的优先级非常高,千万不要将默认值放在其他地方定义,这里也是给出RPC支持的类型.
	-->		
	<DefaultParams int='0'/>
	<DefaultParams short='0'/>
	<DefaultParams long='0'/>
	<DefaultParams char='char(0)'/>
	<LongDefaultParams type="unsigned int"  default="0"/>
	<LongDefaultParams type="unsigned short"  default="0"/>
	<LongDefaultParams type="unsigned char" default="0"/> 
	<LongDefaultParams type="time_t" default="0"/>
	<SpecialDefaultParam type="std::vector" defaultSuffix="(1)" specialType="0"/>
	<SpecialDefaultParam type="std::set" defaultSuffix="()" specialType="0"/>
	<SpecialDefaultParam type="std::map" defaultSuffix="()" specialType="0"/>
	<SpecialDefaultParam type="std::list" defaultSuffix="()" specialType="0"/>
	<DefaultParams SINT8='0'  UINT8='0'/>
	<DefaultParams INT16='0' UINT16='0'/>
	<DefaultParams INT32='0' UINT32='0'/>
	<DefaultParams INT64='0' UINT64='0'/> 
	<DefaultParams double='0.0f' float='0.0f'/> 
	<DefaultParams std_string='std::string()'/> 
	<DefaultParams LibCore_Chunk='LibCore::Chunk()'/>
	
	<Refers>
		<Refer name="std_string"/> 
		<Refer name="LibCore_Chunk"/>
	</Refers>

	<RpcServerName serverName="Server" include="DBServer.h" namespace="Server" rpcInterface="DBServer" outputPath="../../../Tools/src/GameDBServer/src/rpc/"/>
	<RpcServerName serverName="Client" include="DBClient.h" namespace="Client" rpcInterface="DBClient" outputPath="../../../Tools/src/GameDBClient/src/rpc/"/>
	<RpcServerName serverName="Master" include="DBMaster.h" namespace="Server" rpcInterface="DBMaster" outputPath="../../../Tools/src/GameDBServer/src/rpc/"/>
	<RpcServerName serverName="Slave" include="DBSlave.h" namespace="Server" rpcInterface="DBSlave" outputPath="../../../Tools/src/GameDBServer/src/rpc/"/> 
	
	<Tables>  
		<RpcData name="TestRpcData">
			<Param type="inT" name="p1" default="111"/>
			<Param type="unsigned iNt" name="p2" default="21"/> 
			<Param type="chAr" name="p3" default="0"/>
			<Param type="unsiGned char" name="p4" default="0"/>  
			<Param type="std::vector[INT32]" name="p5" unrefer="!" default="std::vector[INT32](1)"/> 
			<Param type="lOng" name="p6" default="0"/> 
			<Param type="tiMe_t" name="p7" default="0"/>
			<Param type="shoRt" name="p8" default="0"/> 
			<Param type="unsIgned short" name="p9" default="0"/>
			<Param type="Double" name="p10" default="1.0f"/> 
			<Param type="Float" name="p11" default="1.0f"/> 
			<Param type="Std_string" name="p12" /> 
			<Param type="libCore_Chunk" name="p13" /> 
		</RpcData>
		
		<RpcData name="TestRpcData2">
			<Param type="sINT8" name="p1" default="0"/>
			<Param type="uINT8" name="p2" default="0"/> 
			<Param type="iNT16" name="p3" default="0"/>
			<Param type="uINT16" name="p4" default="0"/>  
			<Param type="iNT32" name="p6" default="0"/> 
			<Param type="uINT32" name="p7" default="0"/>
			<Param type="iNT64" name="p8" default="0"/> 
			<Param type="uINT64" name="p9" default="0"/> 
		</RpcData>

		<!--		
			rpc测试用例
		-->		
		<Table name="testMulitServerNode" syncType="1" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Proxy name="Server" include="ServerHandler.h" class="ServerHandler" /> 
				<Proxy name="Master" include="MasterHandler.h" class="MasterHandler" /> 
				<Server name="Slave" include="SlaveHandler.h" class="SlaveHandler" /> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call > 
				<Param name="dbname" type="std_string" refer=""/>
				<Param name="value" type="LibCore_Chunk"/> 
				<Param name="value2" type="inT"/>
				<Param name="value22" type="unsigned Int"/>
				<Param name="valChar" type="Char" unrefer=""/>
			</Call>

			<Return>  
				<Param name="res" type="LibCore_Chunk" refer=""/> 
			</Return>
		</Table>
		
		<Table name="testParamsAndRpcDatas" syncType="1" timeout="10">
			<Targets> 
				<Client name="Master" include="MasterHandler.h" class="MasterHandler" /> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" />  
			</Targets>
			
			<Call > 
				<Param name="rpcData" type="TestRpcData"/>
				<Param name="rpcData2" type="TestRpcData2"/>
				<Param name="Vec" type="std::vector[INT32]"/>
			</Call>

			<Return>  
				<Param name="res" type="INT32" refer=""/> 
			</Return>
		</Table> 
		
		<!--		
		databse处理rpc
		-->
		<Table name="HandleUserAuth" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call > 
				<Param name="name" type="std_string" default=""/>
				<Param name="pwd" type="std_string" default=""/>
			</Call>

			<Return>
				<Param name="res" type="INT32" default="0"/> 
			</Return>
		</Table> 
		
		<Table name="HandleSelectDatabase" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call > 
				<Param name="dbname" type="std_string" default=""/>
			</Call>

			<Return>
				<Param name="res" type="INT32" default="0"/> 
			</Return>
		</Table> 
		
		<Table name="HandleCreateDatabase" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call > 
				<Param name="dbname" type="std_string" default=""/>
			</Call>

			<Return>
				<Param name="res" type="INT32" default="0"/> 
			</Return>
		</Table> 
		
		<Table name="HandleDeleteDatabase" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call > 
				<Param name="dbname" type="std_string" default=""/>
			</Call>

			<Return>
				<Param name="res" type="INT32" default="0"/> 
			</Return>
		</Table> 		
		
		<Table name="HandleShowDatabases" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call > 
			</Call>

			<Return>
				<Param name="res" type="LibCore_Chunk" default=""/> 
			</Return>
		</Table> 
		
		<Table name="HandleCreateUser" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call > 
				<Param name="name" type="std_string" default=""/>
				<Param name="pwd" type="std_string" default=""/>
				<Param name="issys" type="SINT8" default="0"/>
			</Call>

			<Return>
				<Param name="res" type="INT32" default="0"/> 
			</Return>
		</Table> 
		
		<Table name="HandleDeleteUser" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call > 
				<Param name="name" type="std_string" default=""/>
			</Call>

			<Return>
				<Param name="res" type="INT32" default="0"/> 
			</Return>
		</Table> 
		
		<Table name="HandleModifyUser" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call > 
				<Param name="name" type="std_string" default=""/> 
				<Param name="pwd" type="std_string" default=""/>
				<Param name="issys" type="SINT8" default="0"/>
			</Call>

			<Return>
				<Param name="res" type="INT32" default="0"/> 
			</Return>
		</Table> 
			
		
		<!--
		hashtable处理rpc
		-->
		<Table name="HandleHSet" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/>
				<Param name="key" type="std_string" default=""/>
				<Param name="value" type="std_string" default=""/>
			</Call>

			<Return>
				<Param name="res" type="INT32" default="0"/> 
			</Return>
		</Table> 
		
		<Table name="HandleHSetNX" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/>
				<Param name="key" type="std_string" default=""/>
				<Param name="value" type="std_string" default=""/>
			</Call>

			<Return>
				<Param name="res" type="INT32" default="0"/> 
			</Return>
		</Table> 
		
		<Table name="HandleHSetOW" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/>
				<Param name="key" type="std_string" default=""/>
				<Param name="value" type="std_string" default=""/>
			</Call>

			<Return>
				<Param name="res" type="INT32" default="0"/> 
			</Return>
		</Table> 
		
		<Table name="HandleHGet" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/>
				<Param name="key" type="std_string" default=""/>
			</Call>

			<Return> 
				<Param name="value" type="std_string" default=""/>
			</Return>
		</Table> 
		
		<Table name="HandleHDel" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/>
				<Param name="key" type="std_string" default=""/> 
			</Call>

			<Return>
				<Param name="res" type="INT32" default="0"/> 
			</Return>
		</Table> 
		
		<Table name="HandleHSetIncr" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/>
				<Param name="key" type="std_string" default=""/>
				<Param name="value" type="INT64" default=""/>
			</Call>

			<Return>
				<Param name="res" type="INT64" default="0"/> 
			</Return>
		</Table> 
		
		<Table name="HandleHSetIncrFloat" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/>
				<Param name="key" type="std_string" default=""/>
				<Param name="value" type="double" default=""/>
			</Call>

			<Return>
				<Param name="res" type="double" default="0"/> 
			</Return>
		</Table> 
		
		<Table name="HandleHGetKeys" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/> 
			</Call>

			<Return>
				<Param name="res" type="LibCore_Chunk" default=""/> 
			</Return>
		</Table> 
		
		<Table name="HandleHGetVals" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/> 
			</Call>

			<Return>
				<Param name="res" type="LibCore_Chunk" default=""/> 
			</Return>
		</Table> 
		
		<Table name="HandleHGetKeyVals" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/> 
			</Call>

			<Return>
				<Param name="res" type="LibCore_Chunk" default=""/> 
			</Return>
		</Table> 
		
		<Table name="HandleHScan" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/> 
				<Param name="start" type="std_string" default=""/> 
				<Param name="regexp" type="std_string" default=""/> 
				<Param name="limit" type="INT64" default="10"/>  
			</Call>

			<Return>
				<Param name="res" type="LibCore_Chunk" default=""/> 
			</Return>
		</Table> 
		
		<Table name="HandleHCount" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/>  
			</Call>

			<Return>
				<Param name="res" type="INT64" default=""/> 
			</Return>
		</Table> 
		
		<Table name="HandleHDrop" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/>  
			</Call>

			<Return>
				<Param name="res" type="INT64" default=""/> 
			</Return>
		</Table> 
		
		<Table name="HandleHList" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call > 
			</Call>

			<Return>
				<Param name="res" type="LibCore_Chunk" default=""/> 
			</Return>
		</Table> 
		
		<Table name="HandleHMultiSet" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/>
				<Param name="keyvalues" type="LibCore_Chunk" default=""/> 
			</Call>

			<Return>
				<Param name="res" type="INT32" default="0"/> 
			</Return>
		</Table> 
		
		<Table name="HandleHMultiGet" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/>
				<Param name="keys" type="LibCore_Chunk" default=""/> 
			</Call>

			<Return>
				<Param name="res" type="LibCore_Chunk" default=""/> 
			</Return>
		</Table> 
		
		<Table name="HandleHMultiDel" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/>
				<Param name="keys" type="LibCore_Chunk" default=""/> 
			</Call>

			<Return>
				<Param name="res" type="INT32" default="0"/> 
			</Return>
		</Table> 
		
		<!--
		sortedset处理rpc
		-->
		<Table name="HandleZSet" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/>
				<Param name="key" type="std_string" default=""/>
				<Param name="score" type="INT64" default=""/>
			</Call>

			<Return>
				<Param name="resCode" type="INT32" default="0"/> 
			</Return>
		</Table> 
		
		<Table name="HandleZGet" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/>
				<Param name="key" type="std_string" default=""/>
			</Call>

			<Return> 
				<Param name="score" type="INT64" default="0"/>
			</Return>
		</Table> 
		
		<Table name="HandleZDel" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/>
				<Param name="key" type="std_string" default=""/>
			</Call>

			<Return> 
				<Param name="score" type="INT64" default="0"/>
			</Return>
		</Table> 
		
		<Table name="HandleZTop" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/>
				<Param name="start" type="INT64" default="0"/> 
				<Param name="end" type="INT64" default="0"/> 
				<Param name="limit" type="INT64" default="0"/> 
			</Call>

			<Return>
				<Param name="res" type="LibCore_Chunk" default=""/> 
			</Return>
		</Table> 
		
		<Table name="HandleZRTop" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/>
				<Param name="start" type="INT64" default="0"/> 
				<Param name="end" type="INT64" default="0"/> 
				<Param name="limit" type="INT64" default="0"/> 
			</Call>

			<Return>
				<Param name="res" type="LibCore_Chunk" /> 
			</Return>
		</Table> 
		
		<Table name="HandleZDrop" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/> 
			</Call>

			<Return>
				<Param name="res" type="INT32" default="0"/> 
			</Return>
		</Table> 
		
		<Table name="HandleZCount" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
				<Param name="table" type="std_string" default=""/>  
			</Call>

			<Return>
				<Param name="res" type="INT64" default=""/> 
			</Return>
		</Table> 
		
		<Table name="HandleZList" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call > 
			</Call>

			<Return>
				<Param name="res" type="LibCore_Chunk" default=""/> 
			</Return>
		</Table> 
		
		<Table name="HandleDump" syncType="0" timeout="10">
			<Targets> 
				<Client name="Client"/> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" /> 
			</Targets>
			
			<Call >
			</Call>

			<Return>
				<Param name="res" type="LibCore_Chunk" default=""/> 
			</Return>
		</Table> 
		
		<!--
		slave相关rpc
		-->
		<Table name="SyncMasterHandler" syncType="1" timeout="10">
			<Targets> 
				<Client name="Master" include="MasterHandler.h" class="MasterHandler"/> 
				<Server name="Slave" include="SlaveHandler.h" class="SlaveHandler" /> 
			</Targets>
			
			<Call > 
				<Param name="id" type="INT32"/>
			</Call>

			<Return>  
				<Param name="res" type="INT32" /> 
			</Return>
		</Table>
		
		<Table name="SlaveStartAuth" syncType="1" timeout="10">
			<Targets> 
				<Client name="Slave" include="SlaveHandler.h" class="SlaveHandler" /> 
				<Proxy name="Master" include="MasterHandler.h" class="MasterHandler" /> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" />  
			</Targets>
			
			<Call > 
				<Param name="name" type="std_string" default=""/>
				<Param name="pwd" type="std_string" default=""/>
			</Call>

			<Return>  
				<Param name="value" type="std_string" default=""/> 
			</Return>
		</Table>
		
		<Table name="SlaveSelectDB" syncType="1" timeout="10">
			<Targets> 
				<Client name="Slave" include="SlaveHandler.h" class="SlaveHandler" /> 
				<Server name="Master" include="MasterHandler.h" class="MasterHandler" /> 
			</Targets>
			
			<Call > 
				<Param name="dbname" type="std_string" default=""/> 
			</Call>

			<Return>  
				<Param name="res" type="INT32" default="0"/> 
			</Return>
		</Table>
		
		<Table name="SlaveRequestSync" syncType="1" timeout="3600">
			<Targets> 
				<Client name="Slave" include="SlaveHandler.h" class="SlaveHandler" /> 
				<Proxy name="Master" include="MasterHandler.h" class="MasterHandler" /> 
				<Server name="Server" include="ServerHandler.h" class="ServerHandler" />  
			</Targets>
			
			<Call >
				<Param name="dbname" type="std_string" default=""/> 
			</Call>

			<Return> 
				<Param name="newbackdir" type="std_string" default=""/>  
				<Param name="res" type="INT32" default="0"/> 
			</Return>
		</Table>
		
		<Table name="MasterStartSync" syncType="1" timeout="10">
			<Targets> 
				<Client name="Master" include="MasterHandler.h" class="MasterHandler" /> 
				<Server name="Slave" include="SlaveHandler.h" class="SlaveHandler" /> 
			</Targets>
			
			<Call > 
				<Param name="filename" type="std_string"/>
				<Param name="filesize" type="INT32"/>
				<Param name="sendtype" type="INT32"/>
				<Param name="value" type="LibCore_Chunk"/>
			</Call>

			<Return>  
				<Param name="res" type="INT32" default="0"/> 
			</Return>
		</Table>
		
		<Table name="SyncDataToSlave" syncType="1" timeout="10">
			<Targets> 
				<Client name="Server" include="ServerHandler.h" class="ServerHandler" />  
				<Proxy name="Master" /> 
				<Server name="Slave" include="SlaveHandler.h" class="SlaveHandler" /> 
			</Targets>
			
			<Call > 
				<Param name="dbname" type="std_string"/>
				<Param name="value" type="LibCore_Chunk"/>
			</Call>

			<Return>  
				<Param name="res" type="INT32" default="0"/> 
			</Return>
		</Table>
	</Tables>
	 
</RpcMsgs>
